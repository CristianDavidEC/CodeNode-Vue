@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --border-color: #cacaca;
  --background-color: #ffffff;
  --background-box-title: #f7f7f7;

  --dfBackgroundColor: rgba(254, 254, 254, 1);
  --dfBackgroundSize: 10px;
  --dfBackgroundImage: radial-gradient(
    rgba(175, 179, 225, 1) 1px,
    transparent 1px
  );

  --dfNodeBackgroundColor: #ffffff;
  --dfNodeTextColor: rgba(15, 2, 40, 1);
  --dfNodeBorderSize: 1px;
  --dfNodeBorderColor: rgba(4, 55, 166, 1);
  --dfNodeBorderRadius: 10px;
  --dfNodeMinHeight: 40px;
  --dfNodeMinWidth: 200px;
  --dfNodeBoxShadowHL: 0px;
  --dfNodeBoxShadowVL: 2px;
  --dfNodeBoxShadowBR: 15px;
  --dfNodeBoxShadowS: 2px;
  --dfNodeBoxShadowColor: rgba(35, 59, 92, 1);

  --dfLineWidth: 3px;
  --dfLineColor: #4682b4;
  --dfLineHoverColor: #4682b4;
  --dfLineSelectedColor: #43b993;

  --dfRerouteBorderWidth: 2px;
  --dfRerouteBorderColor: #ffffff;
  --dfRerouteBackgroundColor: #ffffff;

  --dfRerouteHoverBorderWidth: 2px;
  --dfRerouteHoverBorderColor: #ffffff;
  --dfRerouteHoverBackgroundColor: #ffffff;
}

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#drawflow {
  width: 100%;
  height: 100%;
  background: var(--dfBackgroundColor);
  background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
  background-image: var(--dfBackgroundImage);
}

.drawflow {
  width: 100%;
  height: 100%;
  user-select: none;
}

.parent-drawflow {
  display: flex;
  overflow: hidden;
  touch-action: none;
  outline: 0;
}

.drawflow,
.drawflow .parent-node {
  position: relative;
}

.drawflow .drawflow-node {
  display: flex;
  align-items: center;
  position: absolute;
  width: 250px;
}

.drawflow .drawflow-node {
  background: var(--dfNodeBackgroundColor);
  color: var(--dfNodeTextColor);
  border: var(--dfNodeBorderSize) solid var(--dfNodeBorderColor);
  border-radius: var(--dfNodeBorderRadius);
  min-height: var(--dfNodeMinHeight);
  min-width: var(--dfNodeMinWidth);
  -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL)
    var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
  box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL)
    var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
}

.drawflow .drawflow-node .drawflow_content_node {
  width: 100%;
  display: block;
}

.drawflow .drawflow-node .input {
  left: -22px;
  position: absolute;
  background: white;
  border: 2px solid rgba(35, 59, 92, 1);
  border-radius: 50px;
  height: 20px;
  width: 20px;
  z-index: 1;
}

.drawflow .drawflow-node .output {
  right: -22px;
  position: absolute;
  background: white;
  border: 2px solid rgba(35, 59, 92, 1);
  border-radius: 50px;
  height: 20px;
  width: 20px;
  z-index: 1;
}

/* 
TODO: :hover
      ::selection
      ::
*/

/* Line Conecction*/
.drawflow .connection {
  position: absolute;
  pointer-events: none;
}
.drawflow svg {
  z-index: 0;
  overflow: visible !important;
}

.drawflow .connection .main-path {
  fill: none;
  stroke-width: var(--dfLineWidth);
  stroke: var(--dfLineColor);
}

.drawflow .connection .main-path:hover {
  stroke: var(--dfLineHoverColor);
}

.drawflow .connection .main-path.selected {
  stroke: var(--dfLineSelectedColor);
}

.drawflow .connection .point {
  stroke: var(--dfRerouteBorderColor);
  stroke-width: var(--dfRerouteBorderWidth);
  fill: var(--dfRerouteBackgroundColor);
}

.drawflow .connection .point:hover {
  stroke: var(--dfRerouteHoverBorderColor);
  stroke-width: var(--dfRerouteHoverBorderWidth);
  fill: var(--dfRerouteHoverBackgroundColor);
}
